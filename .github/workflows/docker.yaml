name: Build Container Images

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: boolean
        default: false


permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
        - uses: actions/checkout@v3
        - name: Check metadata.json Windows files are up to date.
          run: |
            make update-windows-file-list
            rm gefyra-*.zip
        - name: If files changed exit here.
          run: |
            export FILES_CHANGED=$(git status --porcelain | wc -l | xargs)
            exit $FILES_CHANGED
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Image meta
          id: ddg_meta
          uses: docker/metadata-action@v4
          with:
            images: |
              gefyra/docker-desktop-extension
            flavor: |
              latest=false
            tags: |
              type=raw,value=development,enable=${{ inputs.release == false }}
              type=raw,value=latest,enable=${{ inputs.release == true }}
              type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
        - name: Write variable to Github Action Envrionment
          run: echo "GEFYRA_EXT_RELEASE=$(cat package.json | jq -r '.dependencies.gefyra' | cut -c2-)" >> $GITHUB_ENV
          working-directory: ui
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            secrets: |
              "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
            build-args: |
              GEFYRA_EXT_RELEASE=${{ env.GEFYRA_EXT_RELEASE }}
              SENTRY_ORG=${{ secrets.SENTRY_ORG }}
              SENTRY_URL=${{ secrets.SENTRY_URL }}
              SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}
              PRODUCTION_BUILD=${{ inputs.release }}
            platforms: linux/amd64,linux/arm64
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{ steps.ddg_meta.outputs.tags }}
